name: Cargo

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Update packages
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - name: Build
        run: cargo build --release --verbose --all-features
        env:
          RUSTFLAGS: -D warnings
      - name: Run tests
        run: cargo test --all --verbose --all-features
      - name: Create artifacts directory
        run: mkdir artifacts
      - name: Copy binaries to a separate directory
        run: find target/release -maxdepth 1 -type f -executable | xargs --replace cp '{}' artifacts
      - name: Strip binaries of debugging symbols
        run: strip artifacts/*
      - name: Upload binaries for use in a dependent job
        uses: actions/upload-artifact@v2
        with:
          name: client-services
          path: artifacts/*


  upload-binaries-to-gcs:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: client-services
          path: artifacts
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/281042598092/locations/global/workloadIdentityPools/github-actions/providers/google-cloud'
          service_account: 'github-actions@radicle-services.iam.gserviceaccount.com'
      - name: Upload binaries to Google Cloud Storage
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: artifacts
          destination: radicle-client-services/
          parent: false

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Update packages
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - name: Docs
        run: cargo doc --all --all-features
        env:
          RUSTDOCFLAGS: -D warnings

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Update packages
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy, rustfmt
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests
        env:
          RUSTFLAGS: -D warnings
      - name: Check formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
